#!/usr/bin/env python
# -*- coding: UTF-8 -*-




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
from Cheetah.compat import unicode
import zoo
import zoo
from datetime import datetime
from datetime import datetime

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '3.2.3'
__CHEETAH_versionTuple__ = (3, 2, 3, 'final', 0)
__CHEETAH_genTime__ = 1567799833.780826
__CHEETAH_genTimestamp__ = 'Fri Sep  6 21:57:13 2019'
__CHEETAH_src__ = '/home/src/mapmint-fenil/mapmint-ui/templates/PSkeleton_bs.tmpl'
__CHEETAH_srcLastModified__ = 'Fri Sep  6 18:51:35 2019'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class PSkeleton_bs(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(PSkeleton_bs, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        try: # generated from line 12, col 1
            verr = VFFSL(SL,"errorMsg",True)
        except: # generated from line 14, col 1
            verr = None
        write('''<!DOCTYPE html>
<html lang="''')
        _v = VFN(VFFSL(SL,"conf",True)["main"]["lang"],"split",False)('-')[0] # '$(conf["main"]["lang"].split(\'-\')[0])' on line 18, col 13
        if _v is not None: write(_filter(_v, rawExpr='$(conf["main"]["lang"].split(\'-\')[0])')) # from line 18, col 13.
        write('''">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="description" content="''')
        _v = VFN(VFFSL(SL,"zoo",True),"_",False)("MapMint: Professional SDI manager") # '$zoo._("MapMint: Professional SDI manager")' on line 24, col 35
        if _v is not None: write(_filter(_v, rawExpr='$zoo._("MapMint: Professional SDI manager")')) # from line 24, col 35.
        write(''', ''')
        _v = VFFSL(SL,"conf",True)["identification"]["abstract"] # '$conf["identification"]["abstract"]' on line 24, col 80
        if _v is not None: write(_filter(_v, rawExpr='$conf["identification"]["abstract"]')) # from line 24, col 80.
        write('''">
<meta name="keywords" content="MapMint, SDI, Geospatial, Web GIS, GIS, WPS, WMS, WFS, WCS, ZOO-Project, ZOO, ZOO WPS, MapServer, GDAL, OSGeo, FOSS4G, OGC, OWS, ''')
        _v = VFFSL(SL,"conf",True)["identification"]["keywords"] # '$conf["identification"]["keywords"]' on line 25, col 161
        if _v is not None: write(_filter(_v, rawExpr='$conf["identification"]["keywords"]')) # from line 25, col 161.
        write('''">
<meta name="copyright" content="''')
        _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # '$conf["provider"]["providerName"]' on line 26, col 33
        if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerName"]')) # from line 26, col 33.
        write('''">
<meta name="author" content="''')
        _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # '$conf["provider"]["providerName"]' on line 27, col 30
        if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerName"]')) # from line 27, col 30.
        write('''">
<link rel="shortcut icon" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # '$conf["main"]["mmAddress"]' on line 28, col 33
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["mmAddress"]')) # from line 28, col 33.
        write('''/favicon.ico" />
<link rel="alternate" type="application/rss+xml" title="MapMint RSS Feed" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["applicationAddress"] # '$(conf["main"]["applicationAddress"])' on line 29, col 81
        if _v is not None: write(_filter(_v, rawExpr='$(conf["main"]["applicationAddress"])')) # from line 29, col 81.
        write('''public/rss" />
<title>''')
        _v = VFFSL(SL,"conf",True)["identification"]["title"] # '$conf["identification"]["title"]' on line 30, col 8
        if _v is not None: write(_filter(_v, rawExpr='$conf["identification"]["title"]')) # from line 30, col 8.
        write(''' / ''')
        _v = VFFSL(SL,"page_title",True) # '$page_title' on line 30, col 43
        if _v is not None: write(_filter(_v, rawExpr='$page_title')) # from line 30, col 43.
        write('''</title>


''')
        if "useCdn" in VFN(VFFSL(SL,"conf",True)["mm"],"keys",False)() and VFFSL(SL,"conf",True)["mm"]["useCdn"]=="true": # generated from line 33, col 1
            write('''<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">
''')
        else: # generated from line 36, col 1
            write('''<link href="''')
            _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 37, col 13
            if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 37, col 13.
            write('''/css/bootstrap.min.css" rel="stylesheet">
<link href="''')
            _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 38, col 13
            if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 38, col 13.
            write('''/assets/css/bootstrap-theme.min.css" rel="stylesheet">
''')
        write('''<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 40, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 40, col 13.
        write('''/assets/css/tables-public.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 41, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 41, col 13.
        write('''/assets/css/mm-font.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 42, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 42, col 13.
        write('''/assets/css/fonts.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 43, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 43, col 13.
        write('''/assets/css/loader.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 44, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 44, col 13.
        write('''/css/mm_icons.css" rel="stylesheet">
<link href="http://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 46, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 46, col 13.
        write('''/assets/css/bootstrap-notify.css" rel="stylesheet">
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 47, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 47, col 13.
        write('''/assets/css/summernote.css" rel="stylesheet">


''')
        if VFFSL(SL,"istyles",True) is not None: # generated from line 50, col 1
            _v = VFFSL(SL,"istyles",True) # '$istyles' on line 51, col 1
            if _v is not None: write(_filter(_v, rawExpr='$istyles')) # from line 51, col 1.
            write('''
''')
        write('''
<link href="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 54, col 13
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 54, col 13.
        write('''/assets/css/mapmint-fixes.css" rel="stylesheet">

</head>
<body>

''')
        self._handleCheetahInclude((VFFSL(SL,"conf",True)["main"]["templatesPath"]+"/loader_bs.tmpl"), trans=trans, includeFrom="file", raw=False)
        write('''
''')
        if VFFSL(SL,"mmodule",True)!="public": # generated from line 61, col 1
            if ("senv" in VFN(VFFSL(SL,"conf",True),"keys",False)() and "loggedin" in VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)() and "lastname" in VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)() and VFFSL(SL,"conf",True)["senv"]["loggedin"]!="false") and not(VFFSL(SL,"verr",True)): # generated from line 62, col 1
                write('''<div id="wrapper">
''')
                lfonts = {	"dashboard": "tachometer",	"distiller": "cubes",	"manager": "map-o",	"tables": "table",	"themes": "th",	"territories": "sitemap",	"indicators": "bar-chart",	"documents": "file-text-o",	"publisher": "laptop",	"georeferencer": "globe",	"importers": "upload"}
                write('''  <!-- Navigation -->
  <nav class="navbar navbar-default">
  <div class="container-fluid">
    <!-- Brand and toggle get grouped for better mobile display -->
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="''')
                _v = VFFSL(SL,"conf",True)["main"]["rootUrl"] # '$conf["main"]["rootUrl"]' on line 88, col 37
                if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["rootUrl"]')) # from line 88, col 37.
                write('''/tables/">''')
                _v = VFFSL(SL,"conf",True)["identification"]["title"] # '$conf["identification"]["title"]' on line 88, col 71
                if _v is not None: write(_filter(_v, rawExpr='$conf["identification"]["title"]')) # from line 88, col 71.
                write('''</a>
    </div>

    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
      </ul>    
      <ul class="nav navbar-nav navbar-left">
''')
                if VFFSL(SL,"mmenu",True) is not None: # generated from line 96, col 1
                    write('''    ''')
                    _v = VFFSL(SL,"mmenu",True) # '$mmenu' on line 97, col 5
                    if _v is not None: write(_filter(_v, rawExpr='$mmenu')) # from line 97, col 5.
                    write('''
''')
                write('''      </ul>
      <ul class="nav navbar-nav navbar-right">
''')
                if VFFSL(SL,"admin_menu",True) is not None: # generated from line 101, col 1
                    write('''    ''')
                    _v = VFFSL(SL,"admin_menu",True) # '$admin_menu' on line 102, col 5
                    if _v is not None: write(_filter(_v, rawExpr='$admin_menu')) # from line 102, col 5.
                    write('''
''')
                write('''     <li>
\t<a href="''')
                _v = VFFSL(SL,"conf",True)["main"]["rootUrl"] # '$conf["main"]["rootUrl"]' on line 105, col 11
                if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["rootUrl"]')) # from line 105, col 11.
                write('''">
\t<i class="icon-home"></i>
\t</a>
     </li>
     <li class="dropdown">
       <a class="dropdown-toggle" data-toggle="dropdown" href="#empty">
         <i class="fa fa-user fa-fw"></i>
       </a>
       <ul class="dropdown-menu dropdown-user">
\t <li><a href="#" id="mmmUserPreferences"><i class="fa fa-user fa-fw"></i> ''')
                _v = VFN(VFFSL(SL,"zoo",True),"_",False)("User Profile") # '$zoo._("User Profile")' on line 114, col 76
                if _v is not None: write(_filter(_v, rawExpr='$zoo._("User Profile")')) # from line 114, col 76.
                write('''</a>
\t </li>
\t <li class="divider"></li>
\t <li><a href="#" id="mmmUserLogOut"><i class="fa fa-sign-out fa-fw"></i> ''')
                _v = VFN(VFFSL(SL,"zoo",True),"_",False)("Logout") # '$zoo._("Logout")' on line 117, col 75
                if _v is not None: write(_filter(_v, rawExpr='$zoo._("Logout")')) # from line 117, col 75.
                write('''</a>
\t </li>
       </ul>
       <!-- /.dropdown-user -->
     </li>
      </ul>
''')
                try: # generated from line 123, col 1
                    lmenu0 = VFFSL(SL,"mmenuleft",True)
                    write('''      <div class="navbar-default sidebar" role="navigation" style="margin-left: -32.5px;">
       <div class="sidebar-nav navbar-collapse" >
        <ul class="nav" id="side-menu">
         ''')
                    _v = VFFSL(SL,"lmenu0",True) # '$lmenu0' on line 128, col 10
                    if _v is not None: write(_filter(_v, rawExpr='$lmenu0')) # from line 128, col 10.
                    write('''
       </ul> 
       </div>
      </div>
''')
                except Exception as e: # generated from line 132, col 1
                    write('''<!-- Left menu : ''')
                    _v = VFFSL(SL,"e",True) # '$e' on line 133, col 18
                    if _v is not None: write(_filter(_v, rawExpr='$e')) # from line 133, col 18.
                    write(''' -->
''')
                write('''
    </div><!-- /.navbar-collapse -->
  </div><!-- /.container-fluid -->
</nav>

\t<div id="page-wrapper">

\t<div class=\'notifications top-right\'></div>
''')
        write('''
''')
        _v = VFFSL(SL,"body",True) # '$body' on line 146, col 1
        if _v is not None: write(_filter(_v, rawExpr='$body')) # from line 146, col 1.
        write('''

''')
        if VFFSL(SL,"tfooter",True) is not None: # generated from line 148, col 1
            _v = VFFSL(SL,"tfooter",True) # '$tfooter' on line 149, col 1
            if _v is not None: write(_filter(_v, rawExpr='$tfooter')) # from line 149, col 1.
            write('''
''')
        write('''\t</div>
''')
        if VFFSL(SL,"mmodule",True)!="public" and ("senv" in VFN(VFFSL(SL,"conf",True),"keys",False)() and VFFSL(SL,"conf",True)["senv"]["loggedin"]!="false" and "firstname" in VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)()) and not(VFFSL(SL,"verr",True)): # generated from line 152, col 1
            write('''<div class="ui-layout-south ">
  <div class="text-center">
''')
            d = datetime.today()
            write('''    <p>Copyright &copy; <a href="''')
            _v = VFFSL(SL,"conf",True)["provider"]["providerSite"] # '$conf["provider"]["providerSite"]' on line 157, col 34
            if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerSite"]')) # from line 157, col 34.
            write('''">''')
            _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # '$conf["provider"]["providerName"]' on line 157, col 69
            if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerName"]')) # from line 157, col 69.
            write('''</a> ''')
            _v = VFFSL(SL,"d.year",True) # '$d.year' on line 157, col 107
            if _v is not None: write(_filter(_v, rawExpr='$d.year')) # from line 157, col 107.
            write('''</p>
  </div>
</div>
''')
        else: # generated from line 160, col 1
            if not("nofooter" in VFN(VFFSL(SL,"conf",True)["mm"],"keys",False)()) or (VFFSL(SL,"conf",True)["mm"]["nofooter"]!="true" and "nofooter" in VFN(VFFSL(SL,"conf",True)["mm"],"keys",False)()): # generated from line 161, col 1
                write('''<footer>
  <div class="container text-center">
''')
                d = datetime.today()
                write('''    <p>Copyright &copy; <a href="''')
                _v = VFFSL(SL,"conf",True)["provider"]["providerSite"] # '$conf["provider"]["providerSite"]' on line 166, col 34
                if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerSite"]')) # from line 166, col 34.
                write('''">''')
                _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # '$conf["provider"]["providerName"]' on line 166, col 69
                if _v is not None: write(_filter(_v, rawExpr='$conf["provider"]["providerName"]')) # from line 166, col 69.
                write('''</a> ''')
                _v = VFFSL(SL,"d.year",True) # '$d.year' on line 166, col 107
                if _v is not None: write(_filter(_v, rawExpr='$d.year')) # from line 166, col 107.
                write('''</p>
  </div>
</footer>
''')
        write('''
<!--
<button style="position:absolute;bottom:0px" onclick="if($(\'.sidebar\').is(\':visible\')){$(\'#page-wrapper\').css({\'margin\':\'50px 0 0 0px\'});$(\'.sidebar\').hide();}else{$(\'#page-wrapper\').css({\'margin\':\'50px 0 0 250px\'});$(\'.sidebar\').show();}" class="btn btn-default"><i class="fa fa-eye"></i></button>
-->
</div>

<!-- User Preferences Modal -->
<div class="modal fade" id="userPreferencesModal" tabindex="-1" role="dialog" aria-labelledby="removeModalLabel">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="removeModalLabel"><i class="fa fa-user"></i> ''')
        _v = VFN(VFFSL(SL,"zoo",True),"_",False)("User Settings") # '$zoo._("User Settings")' on line 183, col 82
        if _v is not None: write(_filter(_v, rawExpr='$zoo._("User Settings")')) # from line 183, col 82.
        write(''' </h4>
      </div>
      <div class="modal-body">
        <div class="myWell">
\t</div>
      </div>
    </div>
  </div>
</div>

<script data-main="''')
        _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # '$conf["main"]["mmAddress"]' on line 193, col 20
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["mmAddress"]')) # from line 193, col 20.
        write('''/tables;module=''')
        _v = VFFSL(SL,"mmodule",True) # '$mmodule' on line 193, col 61
        if _v is not None: write(_filter(_v, rawExpr='$mmodule')) # from line 193, col 61.
        write('''" src="''')
        _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # '$conf["main"]["publicationUrl"]' on line 193, col 76
        if _v is not None: write(_filter(_v, rawExpr='$conf["main"]["publicationUrl"]')) # from line 193, col 76.
        write('''/assets/js/lib/require.js"></script>

</body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    mmenu0 =None

    js1 = ["main_js"] 

    js3 = [] 

    mmodule = "Distiller"

    mmenu = None

    admin_menu = None

    istyles = None

    tfooter = None

    _mainCheetahMethod_for_PSkeleton_bs = 'respond'

## END CLASS DEFINITION

if not hasattr(PSkeleton_bs, '_initCheetahAttributes'):
    templateAPIClass = getattr(PSkeleton_bs,
                               '_CHEETAH_templateClass',
                               Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(PSkeleton_bs)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit https://cheetahtemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=PSkeleton_bs()).run()


