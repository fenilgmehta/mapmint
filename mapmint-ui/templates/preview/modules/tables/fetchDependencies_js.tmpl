#import zoo,json
#import authenticate.service as auth
#set con=auth.getCon($conf)
#set cur=con.conn.cursor()
#set prefix=auth.getPrefix($conf)
#set fres={}
#*


*#
#try
#set obj=$json.loads($inputs["elements"]["value"])
#except Exception as e
<h1>$e</h1>
#end try
#try
#set objKeys=obj.keys()
#set lid=None
#for k in range(len(objKeys))
#for j in range(len($obj[$objKeys[k]]))
#if "myself" in $obj[$objKeys[k]][j].keys()
#import np.service as np
#set latestOptions=(np.findLatestOptions($obj[$objKeys[k]][j]))
#set req="select name, value from mm_tables.p_edition_fields where id="+$objKeys[k].replace("edit_","")
#set res=$con.cur.execute($req)
#set vals=$con.cur.fetchone()
#set freq=$vals[1]
#set fname=$vals[0]
#set mlkeys=$latestOptions.keys()
#for i in range(len(mlkeys))
#* - *#
#if "options" in $latestOptions[mlkeys[i]].keys() and len($latestOptions[mlkeys[i]]["options"])>0
#for kk in range(len($latestOptions[mlkeys[i]]["options"]))
#* -- *#
#set clause=""
#set $clause+=" "+mlkeys[i]+" "+$latestOptions[mlkeys[i]]["operator"]+" "+str($latestOptions[mlkeys[i]]["options"][kk])
#if $freq.upper().count("WHERE")==0
#if $freq.count(" order by")>0
#set req=$freq.replace(" order by"," WHERE " + $clause + " order by")
#else
#if $vals[i][2].count(" ORDER BY ")>0
#set req=($freq.replace(" ORDER BY"," WHERE " + $clause + " ORDER BY"))
#else
#set req=($freq+(" WHERE " + $clause ))
#end if
#end if
#end if
#set res0=$con.cur.execute($req)
#set $fres[$latestOptions[mlkeys[i]]["options"][kk]]={"value":$con.cur.fetchall(),"id":$objKeys[k].replace("edit_","")}
#* -- *#
#end for
$json.dumps($fres)
#stop
#end if
#* - *#
#end for
#stop
#else
#set req="SELECT id, name,value from mm_tables.p_edition_fields WHERE eid=[_id_] AND name=[_name_]"
#set val=$obj[$objKeys[k]][j]["myEditId"]
#set lkeys=$obj[$objKeys[k]][j].keys()
#for i in range(len($lkeys))
#if $lkeys[i]!="myEditId"
#set name=lkeys[i]
#end if
#end for
#set res=$con.pexecute_req([req,{"id":{"value":$val,"format":"s"},"name":{"value":$name,"format":"s"}}])
#set vals=$con.cur.fetchall()
#for i in range(len($vals))
#if $vals[i][1] in $obj[$objKeys[k]][j].keys()
#for ii in range(len($obj[$objKeys[k]][j][$name]["options"]))
#set clause=""
#set $clause+=" "+$obj[$objKeys[k]][j][$name]["tfield"]+" "+$obj[$objKeys[k]][j][$name]["operator"]+" "+str($obj[$objKeys[k]][j][$name]["options"][ii])
#if $vals[i][2].upper().count("WHERE")==0
#if $vals[i][2].count(" order by")>0
#set req=$vals[i][2].replace(" order by"," WHERE " + $clause + " order by")
#else
#if $vals[i][2].count(" ORDER BY ")>0
#set req=($vals[i][2].replace(" ORDER BY"," WHERE " + $clause + " ORDER BY"))
#else
#set req=($vals[i][2]+(" WHERE " + $clause ))
#end if
#end if
#end if
$con.cur.execute($req)
#set $fres[$obj[$objKeys[k]][j][$name]["options"][ii]]={"value":$con.cur.fetchall(),"id":$vals[i][0]}
#end for
#end if
#end for
#end if
#end for
#end for
$json.dumps($fres)
#except Exception as e
#if "sql_query" in $obj[0].keys()
#try
#if len($obj[0]["options"])>0
#set results={}
#for k in range(len($obj[0]["options"]))
#set clause=""
#set $clause+=" "+ $obj[0]["tfield"]+" "+$obj[0]["operator"]+" "+str($obj[0]["options"][k])
#if $obj[0]["sql_query"].upper().count("WHERE")==0
#if $obj[0]["sql_query"].count(" order by")>0
#set req=$obj[0]["sql_query"].replace(" order by"," WHERE " + $clause + " order by")
#else
#if $obj[0]["sql_query"].count(" ORDER BY ")>0
#set req=($obj[0]["sql_query"].replace(" ORDER BY"," WHERE " + $clause + " ORDER BY"))
#else
#set req=($obj[0]["sql_query"]+(" WHERE " + $clause ))
#end if
#end if
#end if
#set res=$con.cur.execute($req)
#set vals=$con.cur.fetchall()
#set results[$obj[0]["options"][k]]=$vals
#end for
$json.dumps($results)
#else
#set res=$con.cur.execute($obj[0]["sql_query"])
#set vals=$con.cur.fetchall()
$json.dumps($vals)
#end if
#except Exception as e1
<h2> $e1 </h2>
#end try
#else
$e
#end if
#end try
