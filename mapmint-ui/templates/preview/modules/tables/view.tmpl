#import zoo
#set tmpl=$conf['main']['templatesPath']+"/Distiller/form_line.html"
#include $tmpl
#set ftmpl=$self._CHEETAH__cheetahIncludes[$tmpl]

#set req="SELECT mm_tables.p_views.name,mm_tables.p_tables.description,mm_tables.p_tables.name,mm_tables.p_tables.id,mm_tables.p_views.clause FROM mm_tables.p_views,mm_tables.p_tables where mm_tables.p_tables.id=mm_tables.p_views.ptid and mm_tables.p_views.id="+$qComponents[0]
#set res=$cur.execute($req)
#set vals=$cur.fetchone()

<h1>$vals[0]</h1>
<div class="description">$vals[1]</div>

#set table=$vals[2]
#set tableId=str($vals[3])
#set clause=$vals[4]

#set req="SELECT mm_tables.p_editions.id,mm_tables.p_editions.name,mm_tables.p_editions.step FROM mm_tables.p_editions,mm.groups,mm_tables.p_edition_groups where mm.groups.id=mm_tables.p_edition_groups.gid and mm_tables.p_editions.id=mm_tables.p_edition_groups.eid and ptid="+$tableId+" and mm.groups.id in (SELECT id from mm.groups where name='"+$conf["senv"]["group"]+"') and mm_tables.p_editions.step<=0 order by mm_tables.p_editions.step asc"
#set res=$cur.execute($req)
#set vals=$cur.fetchall()
<ul class="nav nav-tabs">
$ftmpl.printTabHeader("listing",$zoo._("Table"),"fa-table","none")
#if len($vals)>0

$ftmpl.printTabHeaderNew({"id":"edit","title":$zoo._("Edit"),"font":"fa-edit","classe":"require-select"})
#for i in range(len($vals))
#set font="fa-search"
#if $vals[i][2]==0
#set font="fa-plus"
#else
#if $vals[i][2]==-2
#set font="fa-trash"
#end if
#end if
#if $vals[i][2]==0
$ftmpl.printTabHeader("edit_"+str($vals[i][0]),$zoo._("Add"),$font,"none")
#else
#if $vals[i][2]==-2
$ftmpl.printTabHeaderNew({"id":"edit_"+str($vals[i][0]),"title":$vals[i][1],"font":$font,"classe":"require-select"})
#else
$ftmpl.printTabHeaderNew({"id":"edit_"+str($vals[i][0]),"title":$vals[i][1],"font":$font,"classe":"no-require-select"})
#end if
#end if
<!-- <a href="$conf["renv"]["REDIRECT_URL"]/edit/$vals[i][0]">$vals[i][1]</a> -->
#end for
#end if
</ul>

<div class="tab-content">
#for i in range(len($vals))
     <div id="edit_$(vals[i][0])" role="tabpanel" class="tab-pane" >
#set inputs0={"id":{"value":str($vals[i][0])}}
$(Template(file=$conf["main"]["templatesPath"]+"/preview/modules/tables/edit.tmpl",searchList={"conf": $conf,"inputs": $inputs0,"cur":$cur}))
     </div>
#end for

     <div id="edit" role="tabpanel" class="tab-pane" >
#set req="SELECT mm_tables.p_editions.id,mm_tables.p_editions.name,mm_tables.p_editions.step FROM mm_tables.p_editions,mm.groups,mm_tables.p_edition_groups where mm.groups.id=mm_tables.p_edition_groups.gid and mm_tables.p_editions.id=mm_tables.p_edition_groups.eid and ptid="+$tableId+" and mm.groups.id in (SELECT id from mm.groups where name='"+$conf["senv"]["group"]+"') and mm_tables.p_editions.step>=0"
#set res=$cur.execute($req)
#set vals1=$cur.fetchall()
<ul class="nav nav-tabs">
#for i in range(len($vals1))
$ftmpl.printTabHeaderNew({"id":"edit0_"+str($vals1[i][0]),"title":$vals1[i][1],"classe":"require-select"})
#end for
</ul>

<div class="tab-content">

#for i in range(len($vals1))
     <div id="edit0_$vals1[i][0]" role="tabpanel" class="tab-pane" >
#set inputs0={"id":{"value":str($vals1[i][0])}}
$(Template(file=$conf["main"]["templatesPath"]+"/preview/modules/tables/edit.tmpl",searchList={"conf": $conf,"inputs": $inputs0,"cur":$cur}))
     </div>
#end for
</div>
     </div>

     <div id="listing" role="tabpanel" class="tab-pane" >

#set req="SELECT mm_tables.p_view_fields.id,mm_tables.p_view_fields.alias,mm_tables.p_view_fields.value,mm_tables.p_view_fields.view,mm_tables.p_view_fields.search,mm_tables.p_view_fields.class FROM mm_tables.p_views,mm_tables.p_view_fields where mm_tables.p_views.id=mm_tables.p_view_fields.vid and mm_tables.p_views.id="+$qComponents[0]
#set res=$cur.execute($req)
#set vals=$cur.fetchall()
#set values=[]
#set classifiers=["asc","desc"]
#set classifier=""

<table id="layer_property_table_table_display">
    <thead>
      <tr>
#for i in range(len($vals))
#if $vals[i][3]
	<th style="width:25px">$vals[i][1].title()</th>
#set $values+=[$vals[i][2]]
#end if
#if $vals[i][5] is not None
#set $classifier=$vals[i][2]+" "+$classifiers[($vals[i][5]-1)]
#end if
#end for
      </tr>
    </thead>
    <tbody>
#set contents=[]
#try
#set req1="SELECT "+(",".join($values+["id"]))+" FROM "+$table+" WHERE "+$clause+" ORDER BY "+$classifier
#set res1=$cur.execute($req1)
#set vals1=$cur.fetchall()
#for j in range(len($vals1))
     <tr>
#for k in range(len($values))
#set content=[]
#if j==0
#if k==0
#set $contents+=['<input type="hidden" name="id" value=""/> ']
#else
#set $contents+=['']
#end if
#end if
       <td>#if k==0#<input type="hidden" name="id" value="$vals1[$j][len($vals1[j])-1]" />#end if#$vals1[$j][$k]</td>
#end for
     </tr>
#end for
#except Exception as e
     <tr>
       <td class="alert alert-danger" colspan="$(len($vals))">$(zoo._("Configuration error: ")+str($e))</td>
     </tr>
     <tr>
       <td class="alert alert-danger" colspan="$(len($vals))">$(zoo._("SQL Query: ")+str($req1))</td>
     </tr>
#end try
    </tbody>
  </table>

     </div>
</div>

#for i in range(len($contents))
<script type="template/text" id="col_$(i)_template">
$contents[i]
</script>
#end for

