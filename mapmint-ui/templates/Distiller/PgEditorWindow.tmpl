#import zoo
<form id="pg_editor">
#from datastores.postgis import pgConnection
#import json
#set inputs1=$inputs
#set $inputs1["force"]={"value":"true"}
#set demo=pgConnection.getTableDescription($conf,$inputs,$outputs)
#set tmp=json.loads($outputs["Result"]["value"],encoding="utf-8")
#if "clause" in $inputs.keys() and $inputs["clause"]["value"]!="NULL"
#set demo1=pgConnection.getTableContent($conf,$inputs1,$outputs)
#set tmp1=json.loads($outputs["Result"]["value"],encoding="utf-8")
#else
#set tmp1={"rows": [{"cell": []}]}
#for i in tmp
#set tmp1["rows"][0]["cell"]+=[""]
#end for
#end if
#set j=0
#if "clause" in $inputs1.keys()
#set hasClause=True
#set clause=$inputs1["clause"]["value"]
#else
#set hasClause=False
#set clause="true"
#end if
#for i in tmp
#if $i[2]!="geometry"
<div>
<label for="="pg_tuple_$i[1]"">$i[1]:</label>
#if $i[2]=="bool"
<input type="checkbox" id="pg_tuple_$i[1]" #if len($tmp1.rows)>0 and $tmp1.rows[0].cell[$j]!="None" and $tmp1.rows[0].cell[$j]=="t"#checked="true"#end if# />
#else
#if $i[2]=="text" or ($i[2].count("varchar")>0 and int($i[2][8:len($i[2])-1])>55)
<textarea id="pg_tuple_$i[1]">#if len($tmp1.rows)>0 and $tmp1.rows[0].cell[$j]!="None"##if $i[1]=="content"#$tmp1.rows[0].cell[$j].replace("<div>","",1).replace("</div>","",1)#else#$tmp1.rows[0].cell[$j].replace("\\n","\n")#end if##end if#</textarea>
#else
#if $i[3]=="FOR"

#set inputBis=$inputs
#set $inputBis["table"]["value"]=$i[4]
#set demo2=pgConnection.getTableDescription($conf,$inputBis,$outputs)
#set tmp2=json.loads($outputs["Result"]["value"],encoding="utf-8")

#set fname=$tmp2[0][1]
#for l in tmp2
#if $l[2].count("char")>0 or $l[2].count("text")>0
#set fname=$l[1]
#break
#end if
#end for

#if not("clause" in $inputBis.keys())
#set hasClause=False
#set $inputBis["clause"]={"value":""}
#end if
#set $inputBis["clause"]["value"]="true"
#set $inputBis["limit"]={"value": "100000"}
#set $inputBis["page"]={"value": "1"}
#set $inputBis["cols"]={"value": "id,"+$fname}
#set demo3=pgConnection.getTableContent($conf,$inputBis,$outputs)
#set tmp3=json.loads($outputs["Result"]["value"],encoding="utf-8")
#try
#set $inputs1["clause"]["value"]=$clause
<select id="pg_tuple_$i[1]">
 <option value="null">$zoo._("None")</null>
#for m in $tmp3.rows
 <option value="$m["cell"][0]" #if len($tmp1.rows)>0 and $tmp1.rows[0].cell[$j]!="None" and $tmp1.rows[0].cell[$j]==$m["cell"][0]#selected="true"#end if#>$m["cell"][1]</option>
#end for
</select>
#except
</select>
#end try
#else
#if $i[2].count("varchar")>0 and int($i[2][8:len($i[2])-1])==40
<input name="" id="pg_tuple_$i[1]" type="password" value="" />
#else
<input name="" id="pg_tuple_$i[1]" value="#if len($tmp1.rows)>0 and $tmp1.rows[0].cell[$j]!="None"#$tmp1.rows[0].cell[$j]#end if#" />
#end if
#if $i[2]=="date"
<script>\$("#pg_tuple_$i[1]").datepicker();</script>
#end if
#end if
#end if
#end if
</div>
#end if
#set j=$j+1
#end for
#if $hasClause
<input type="hidden" id="clause" value="$inputs1["clause"]["value"]" />
#end if
<input type="submit" value="$zoo._('Save')" onclick="try{MapMintDBManager.validTupleEditing();}catch(e){alert(e);}return false;" />
</form>